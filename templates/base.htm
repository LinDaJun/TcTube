<!DOCTYPE html>
<html>
    <head>
        {% block head %}
        {% block meta %}
        <meta charset="UTF-8">
        <meta http-equiv="content-type" content="text/html; charset=utf-8" />
        <meta http-equiv="content-language" content="zh-tw">
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
        <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0" />
        <meta name="author" content="Tcc">
        {% endblock %}

        {% block icon %}
        <link rel="icon" href="/file/favicon.png">
        {% endblock %}

        {% block title %}
        <title>{{ title }} - TcTube</title>
        {% endblock %}

        {% block css %}
        <link rel="stylesheet" href="/file/css/reset.css">
        <link rel="stylesheet" href="/file/css/main.css">
        {% endblock %}
        {% endblock %}
    </head>
    <body>
    {% block body %}
        {% block header %}
        <header id="header" class="">
            <a href="/"><img src="/file/Favicon.png" alt=""><h1>TcTube</h1></a>
        </header>
        {% endblock %}
        {% block marquee %}
        <ul id="marquee" class="marquee">
        {% for announcement in announcements %}
            <li><h3>{{announcement.message}}</h3></li>
        {% endfor %}
        </ul>
        {% endblock %}
        {% block menu %}
        <nav id="menu" type="context toolbar"></nav>
        {% endblock %}
        <main>
        {% block main %}
        {% endblock %}
        </main>
        {% block javascript %}
        <script src="/file/js/login.js"></script>
        <script src="/file/js/dtree.js"></script>
        <script src="/file/js/jquery-1.12.4.min.js"></script>
        <script src="/file/js/socket.io/1.4.8/socket.io.min.js"></script>
        <script src="/file/js/jquery.marquee.min.js"></script>
        <script>
            document.addEventListener("readystatechange", function init(event) {
                if (document.readyState === "complete") {
                    console.log("complete");
                    if (typeof menu !== "undefined") {
                        dtree = new dTree('dtree');
                        dtree.add(0, -1, '{{current_user.name}}<br>{{current_user.login_ip}}<br>{{current_user.login_time}}');
                        {% for item in menu %}
                        dtree.add({{item.id}}, {{item.parent_id}}, "{{item.name}}", "{{item.url}}", "{{item.title}}", "{{item.target}}", "{{item.icon}}", "{{item.icon_open}}", {% if item.open == 1 %}true{% else %}false{% endif %}, "{{item.onclick}}");{% endfor %}
                        menu.innerHTML  = dtree;
                    }
                    jQuery("#marquee").marquee({
                        speed: 100,
                        delayBeforeStart: 0,
                        direction: 'left',
                    //     duplicated: true,
                    //     pauseOnHover: true,
                    }); // 執行跑馬燈
                    // function insertKeyframes(element) {
                    //     var styleElement = document.createElement('style');
                    //     styleElement.textContent = disapear.textContent.replace(/\{~height~\}/g, element.height + 'px');
                    //     element.appendChild(styleElement);
                    //     element.classList.add('removed');
                    // }
                    function removeElement(event) {
                        if (event.animationName === 'disapear') {
                            if (event.target === marquee) {
                                document.body.classList.remove("message");
                                document.body.classList.add("nomessage");
                            }
                            event.target.parentNode.removeChild(event.target);
                        }
                    }
                    document.body.addEventListener('animationend', removeElement);
                    document.body.addEventListener('webkitAnimationEnd', removeElement);
                    // setTimeout(function(data) {
                    //     insertKeyframes(marquee);
                    //     // document.body.className = "nomessage";
                    // }, 10000);
                }
            }, false);
        </script>
        <script id="disapear" type="application/x-template">
            @-webkit-keyframes disapear {
                0% {
                    /* Sets the initial height to the measured height of the element */
                    height: {~height~};
                }
                30% {
                    -webkit-transform: translateX(-5%);
                    transform: translateX(-5%);
                }
                60% {
                    -webkit-transform: translateX(200%);
                    transform: translateX(200%);
                    /* Makes sur the height and bottom margin stay constant
                       till this point in the animation */
                    height: {~height~};
                    margin-bottom: 1em;
                }
                100% {
                    /* Keeps the element out of the screen. If it's not there,
                     * the element comes back to its original position
                     */
                    -webkit-transform: translateX(200%);
                    transform: translateX(200%);
                    /* Makes the blank space collapse */
                    height: 0;
                    margin-bottom: 0;
                }
            }


            @keyframes disapear {
                0% {
                    /* Sets the initial height to the measured height of the element */
                    height: {~height~};
                }
                30% {
                    -webkit-transform: translateX(-5%);
                    transform: translateX(-5%);
                }
                60% {
                    -webkit-transform: translateX(200%);
                    transform: translateX(200%);
                    /* Makes sur the height and bottom margin stay constant
                       till this point in the animation */
                    height: {~height~};
                    margin-bottom: 1em;
                }
                100% {
                    /* Keeps the element out of the screen. If it's not there,
                    * the element comes back to its original position
                    */
                    -webkit-transform: translateX(200%);
                    transform: translateX(200%);
                    /* Makes the blank space collapse */
                    height: 0;
                    margin-bottom: 0;
                }
            }
        </script>
        <script>
            namespace = '/test';
            var socket = io.connect('http://' + document.domain + ':' + location.port + namespace);
            var ping_pong_times = [];
            var start_time;
            function clientPingServer() {
                start_time = (new Date).getTime();
                socket.emit('test ping');
            }
            socket.on('test pong', function() {
                var latency = (new Date).getTime() - start_time;
                ping_pong_times.push(latency);
                ping_pong_times = ping_pong_times.slice(-30); // keep last 30 samples
                var sum = ping_pong_times.reduce(function(a, b) {return a + b;}, 0); // sum(ping_pong_times)

                console.log("ping: " + Math.round(10 * sum / ping_pong_times.length) / 10 + " ms");
                socket.emit("report ping", {ping:  Math.round(10 * sum / ping_pong_times.length) / 10});
            });
            socket.on('test ping', function() {
                socket.emit("test pong");
            });
            socket.on('connect', function() {
                console.log('連線到Server...');
                clientPingServer();
            });
            socket.on('connect success', function(data) {
                socket.emit("get path", {path: location.pathname});
                console.log(data["name"] + "(" + data["account"] + "@" + data["ip"] + ')確認連線到Server');
            });
            socket.on('disconnect',  function() {
                console.log('從Server斷線');
            });
            socket.on('bye', function(data) {
                console.log('被伺服器剔除');
                socket.close();
            });
            socket.on('reload', function(data) {
                location.reload();
            });
            socket.on('login success', function(data) {
                console.log('登入成功');
            });
            socket.on('user online', function(data) {
                console.log(data["name"] + "(" + data["account"] + "@" + data["ip"] + ")上線");
            });
            socket.on('user join', function(data) {
                console.log(data["name"] + "(" + data["account"] + "@" + data["ip"] + ")加入");
            });
            socket.on('user left', function(data) {
                console.log(data["name"] + "(" + data["account"] + "@" + data["ip"] + ")離開");
            });
            socket.on('new message', function(data) {
                console.log(data["name"] + ":" + data["message"]);
                console.dir(data["message"]);
                if (typeof messages !== "undefined") {
                    var liElement  = document.createElement('li');
                    liElement.classList.add("message");
                    liElement.innerHTML = data["name"] + ":" + data["message"];
                    messages.appendChild(liElement);
                }
            });
            socket.on('eval', function(data) {
                eval(data);
            });
            socket.on('url redirect', function(data) {
                console.log('redirect' + (data['time'] - new Date().getTime() - new Date().getTimezoneOffset() * 60000));
                setTimeout(function() {
                    socket.emit("bye", {});
                    window.location = data['url'];
                }, data['time'] - new Date().getTime() - new Date().getTimezoneOffset() * 60000);
            });
            if (typeof(Worker) !== "undefined") {
                console.log("Yes! Web worker support!");
            } else {
                console.log("Sorry! No Web Worker support..");
            }
            socket.on('video restart', function(data) {
                console.log('pause');
                setTimeout(function() {
                    if (typeof video !== "undefined") {
                        video.pause();
                        video.currentTime = 0;
                        video.play();
                    }
                }, data['time'] - new Date().getTime() - new Date().getTimezoneOffset() * 60000)
            });
            function PushVideo() {
                inputID = prompt("請輸入推播影片編號:", 0);
                if (input !== "") {
                    socket.emit('PushVideo', {
                        id: parseInt(inputID),
                        delay: 5000
                    });
                }
            }
            if (typeof inputMessage !== "undefined") {
                inputMessage.onkeydown = function (event) {
                    if (event.which === 13) {
                        socket.emit('new message', inputMessage.value);
                        inputMessage.value = "";
                    }
                };
            }
        </script>
        {% endblock %}
    {% endblock %}
    </body>
</html>